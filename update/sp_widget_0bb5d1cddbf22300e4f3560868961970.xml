<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil, spModal) {
  var c = this;
	
	c.showCompleted = false;
	
	c.completeToDo = function(to_do) {
		c.server.get({
			method: 'completeToDo',
			sys_id: to_do.sys_id,
			complete: to_do.complete
		});
	};
	
	c.deleteToDo = function(to_do) {
		spModal.confirm("Are you sure you want to delete this item?").then(function(confirm) {
			if (confirm) {
				c.server.get({
					method: 'deleteToDo',
					sys_id: to_do.sys_id
				});
			}
		});
	};
	
	c.isAllComplete = function() {
		var allComplete = true;
		c.data.to_dos.forEach(function(i) {
			if (!i.complete) {
				allComplete = false;
			}
		});
		
		return allComplete;
	};
	
  c.dragControlListeners = {
		disabled: false,
		// Upon the event's stop, start the re-order on the server
		stop: function(event, ui) {
			for (var i = 0; i < c.data.to_dos.length; i++) {
				c.server.get({
					method: 'updateOrder',
					sys_id: c.data.to_dos[i].sys_id,
					order: i
				});
			}
		}
	};
	
	spUtil.recordWatch($scope, 'x_11264_to_do_to_do', '', function(name,data) {
		spUtil.update($scope);
	});
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.pointer {
	cursor: pointer;
}

.icon-saver {
  min-height: 40px;
}

.grabbable {
  cursor: move; /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

 /* Apply a "closed-hand" cursor during drag operation. */
.grabbable:active { 
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>to_do_list</id>
        <internal>false</internal>
        <link/>
        <name>To Do List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
	if (input && input.sys_id) {
		var toDo = new GlideRecord('x_11264_to_do_to_do');
		toDo.get(input.sys_id);
		
		if (input.method === 'completeToDo') {
			toDo.setValue('complete', input.complete);
			toDo.update();
		}
		
		if (input.method === 'updateOrder') {
			toDo.setValue('order', input.order);
			toDo.update();
		}
		
		if (input.method === 'deleteToDo') {
			toDo.deleteRecord();
		}
	}
	
	data.to_dos = [];
	
	var gr = new GlideRecord('x_11264_to_do_to_do');
	gr.addQuery('owner', gs.getUserID());
	gr.orderBy('order');
	gr.query();
	while (gr.next()) {
		var to_do = {};
		to_do.title = (gr.getDisplayValue('title') != 'undefined') ? gr.getDisplayValue('title') : '';
		to_do.short_description = (gr.getDisplayValue('short_description') != 'undefined') ? gr.getDisplayValue('short_description') : '';
		to_do.complete = (gr.getDisplayValue('complete') === 'true');
		to_do.sys_id = gr.getUniqueValue();
		to_do.order = parseInt(gr.getValue('order'));
		data.to_dos.push(to_do);
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-01-02 20:17:19</sys_created_on>
        <sys_id>0bb5d1cddbf22300e4f3560868961970</sys_id>
        <sys_mod_count>53</sys_mod_count>
        <sys_name>To Do List</sys_name>
        <sys_package display_value="To Do" source="x_11264_to_do">2263590ddbf22300e4f3560868961956</sys_package>
        <sys_policy/>
        <sys_scope display_value="To Do">2263590ddbf22300e4f3560868961956</sys_scope>
        <sys_update_name>sp_widget_0bb5d1cddbf22300e4f3560868961970</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-01-03 19:05:06</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading">
    To Do List
  </div>
  <div class="list-group" ui-sortable="c.dragControlListeners" is-disabled="false" ng-model="c.data.to_dos">
    <a class="list-group-item grabbable" ng-repeat="to_do in c.data.to_dos" ui-sortable-item ui-sortable-handle ng-show="(!c.showCompleted && !to_do.complete) || c.showCompleted">
    	<input class="pull-left pointer" type="checkbox" ng-model="to_do.complete" ng-change="c.completeToDo(to_do)"/>
      <div class="m-l-lg icon-saver" ng-class="{'text-muted': to_do.complete == true}">
        <b ng-class="{'text-muted': to_do.complete == true, 'text-primary': to_do.complete == false}">{{to_do.title}}</b><br/>
        {{to_do.short_description}}
        <i class="fa fa-trash pull-right btn-danger pointer" ng-click="c.deleteToDo(to_do)"></i>
      </div>
    </a>
  </div>
  <div ng-if="c.data.to_dos.length == 0 || (c.isAllComplete() && !c.showCompleted)" class="b-t wrapper text-center">
    Congratulations! You have nothing to do.
  </div>
</div>
<div class="form-group">
  <button class="btn btn-primary btn-block" ng-click="c.showCompleted = true" type="button" ng-if="!c.showCompleted">Show Completed</button>
  <button class="btn btn-primary btn-block" ng-click="c.showCompleted = false" type="button" ng-if="c.showCompleted">Hide Completed</button>
</div>]]></template>
    </sp_widget>
</record_update>
